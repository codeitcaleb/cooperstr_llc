{"version":3,"sources":["images/coopersLogo.png","components/Home.jsx","components/About.jsx","components/Services.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","src","alt","About","Services","Header","to","App","require","class","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0KAAAA,EAAOC,QAAU,IAA0B,yC,wGCU5BC,EARF,WACT,OACI,6BACI,yBAAKC,IAAI,4BAA4BC,IAAI,0BCiBtCC,EApBD,WACV,OACI,6BACI,wCACA,yBAAKF,IAAI,oCAAoCC,IAAI,iBACjD,2WAIA,+cAIA,kMCGGE,EAhBE,WACb,OACI,6BACI,iDACA,4BACI,0DACA,uEACA,oFACA,4DACA,0FACA,yDCKDC,MAdf,WACI,OACI,6BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,iBACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,eCwBDC,MAvBf,WACE,OACE,kBAAC,IAAD,KACA,kBAAC,EAAD,MACE,6BACE,yBAAKN,IAAKO,EAAQ,IACZN,IAAI,eAAeO,MAAM,WAEzB,6BACA,2BAAG,8EAGX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWZ,IACjC,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,SAASC,UAAWT,IACtC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,YAAYC,UAAWR,OCb7BS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.063dbab1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coopersLogo.8e7266a3.png\";","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            <img src=\"../images/coopersLogo.png\" alt=\"Cooper TR, LLC Logo\" />\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\n\nconst About = () => {\n    return (\n        <div>\n            <h2>About Us</h2>\n            <img src=\"../images/tommy_cooper_photo.jpeg\" alt=\"Tommy Cooper\" />\n            <p>\n            If you're having trouble keeping up with your home maintenance and other cleaning tasks, then you may want to solicit the help of a Stockbrigde, GA, service professional. At Coopers TR, LLC, our well-trained employees are friendly. We have over 18 years of experience in working with clients to get their home in pristine condition.\n            </p>\n\n            <p>\n            We have all the supplies we need to achieve gleaming windows, spotless floors, and sanitary bathrooms. We're available to work on homes, offices, and other commercial facilities. We always try to keep our rates reasonable so that you'll be able to afford our services even if you're on a strict budget. We'll show up regularly to tidy up your spaces daily, weekly, bi-weekly, or according to whatever schedule is convenient for you.\n            </p>\n\n            <p>\n            Coopers TR, LLC is a locally owned and operated Stockbrigde, GA, cleaning service that's fully licensed and insured. Contact us for more info or a free estimate.\n            </p>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react'\n\nconst Services = () => {\n    return (\n        <div>\n            <h3>WE PROUDLY OFFER:</h3>\n            <ul>\n                <li>Maid/House Keeping service</li>\n                <li>Recurring Office/Home Cleaning Services</li>\n                <li>Move In/Out Cleaning and Post Construction Clean ups</li>\n                <li>Home Maintenance and Repairs</li>\n                <li>Dry-Cleaning Pick-Up and Delivery Services (limited areas)</li>\n                <li>Residential/Commercial</li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Services\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Header() {\n    return (\n        <nav>\n            <ul>\n                <Link to=\"/\" >Home - Image </Link>\n                <Link to=\"/services\">Services</Link>\n                <Link to=\"/about\">About Us</Link>\n                {/* <Link to=\"/\"></Link>\n                <li>Reviews</li> */}\n            </ul>\n        </nav>\n    )\n}\n\nexport default Header\n\n// https://www.google.com/maps/place/Coopers+TR,+LLC/@33.5138189,-84.2154808,17z/data=!3m1!4b1!4m7!3m6!1s0x0:0x25276d3d9806963!8m2!3d33.5138189!4d-84.2132921!9m1!1b1","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport About from './components/About';\nimport Services from './components/Services';\nimport Header from './components/Header';\n\n\nfunction App() {\n  return (\n    <Router>\n    <Header />\n      <div>\n        <img src={require('./images/coopersLogo.png')} \n              alt=\"Coopers Logo\" class=\"center\"\n        />\n              <br/>\n              <p><b>Site Under Development!! Please Visit Again!!</b></p>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/services\" component={Services} />\n      </Switch>\n    </Router>    \n      \n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}